import praw
import os
import card_stuff
from replit import db
import datetime


cards_url = 'https://marvelsnap.pro/snap/do.php?cmd=getcards'
cards = card_stuff.get_card_dict('card_list.csv')

def check_comment(comment,card_dict,test = False):
  cards_in_comment = []
  for card in card_dict.keys():
    if test: 
      plain_card_string = card
    else: 
      markdown_card_string = '\[\[' + card + '\]\]'
      plain_card_string = '[[' + card + ']]'
    if markdown_card_string in comment:
      cards_in_comment.append(card)
    if plain_card_string in comment: 
      cards_in_comment.append(card)
    
  return cards_in_comment

def generate_message(cards_in_comment,card_dict):
  message = ''
  for card in cards_in_comment:
    message += card_stuff.card_to_string(card,card_dict) + '\n\n'
  message += '*This message was generated by MarvelSnapCardBot. Use syntax [[card_name]] to get a reply like this*'
  return message


def check_comment_json(comment,card_dict,test = False):
  cards_in_comment = []
  comment = comment.lower().replace(' ','').replace('-','')
  for key in card_dict.keys():
    for searchname in card_dict[key]['searchnames']:
      markdown_card_string = '\[\[' + searchname + '\]\]'
      plain_card_string = '[[' + searchname + ']]'
      if markdown_card_string in comment:
        cards_in_comment.append(key)
      if plain_card_string in comment: 
        cards_in_comment.append(key)
    
  return cards_in_comment



def generate_message_json(cards_in_comment,card_dict):
  message = ''
  for key in cards_in_comment:
    message += card_stuff.card_to_string_json(key,card_dict) + '\n\n'
  message += '*Message generated by MarvelSnapCardBot. Use syntax [[card_name]] to get a reply like this*'
  return message

def main():
  cards_from_json = card_stuff.get_card_dict_from_json(cards_url)

  test= False
  last_refresh = datetime.datetime.now()

  reddit = praw.Reddit(
      client_id = os.getenv('client_id'),
      client_secret = os.getenv('client_secret'),
      user_agent="Script to fetch card details for Marvel Snap, use format [[Card Name]], by u/MarvelSnapBot",
    username = os.getenv('reddit_username'),
    password = os.getenv('reddit_password'),
    ratelimit_seconds = 10
    
  )

  subreddit = reddit.subreddit('MarvelSnap')
  
  for comment in subreddit.stream.comments():
    if comment.id in db.keys():
      print('I already commented on this comment: ' + comment.id)
      print(comment.body)
      continue
    else:
      time_elapsed = datetime.datetime.now()-last_refresh
      if time_elapsed.seconds > 3600:
        last_refresh = datetime.datetime.now()
        cards_from_json = card_stuff.get_card_dict_from_json(cards_url)
        print('Refreshed Database, running for {} seconds'.format(time_elapsed.seconds))

      cards_in_comment_json = check_comment_json(comment.body,cards_from_json)
      if cards_in_comment_json:
        db[comment.id] = comment.body + ':::' + str(datetime.datetime.now())
        print(comment.body)
        print(generate_message_json(cards_in_comment_json,cards_from_json))
        if not test:
          comment.reply(body=generate_message_json(cards_in_comment_json,cards_from_json))
        
if __name__ == "__main__":
  main()
  #print(card_stuff.card_to_string('Angel',cards))